@page "/"

@using Microsoft.AspNetCore.Components.Web

@using System.Net;
@using System.Net.Sockets
@using BlazorFeste.Classes;

@namespace BlazorFeste.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var state = new InitialClientState();

    var RemoteIPAddress = HttpContext.Connection?.RemoteIpAddress;
    if (IPAddress.IsLoopback(RemoteIPAddress))
    {
        state.IPAddress = "localhost";
    }
    else if (RemoteIPAddress.AddressFamily.ToString() == ProtocolFamily.InterNetworkV6.ToString())
    {
        state.IPAddress = $"[{RemoteIPAddress.ToString()}]";
    }
    else
    {
        state.IPAddress = RemoteIPAddress.ToString();
    }
    state.WebPage = HttpContext.Request.Path.ToString();
}

<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>WebFeste</title>

    <base href="~/" />
    <link rel="stylesheet" href="css/site.css" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="BlazorFeste.styles.css" />

    <!-- DevExtreme themes -->
    <link rel="dx-theme" data-theme="generic.light" href="~/lib/devextreme/css/dx.light.css" data-active="true" />
    <link rel="dx-theme" data-theme="generic.dark" href="~/lib/devextreme/css/dx.dark.css" data-active="false" />
    <link rel="dx-theme" data-theme="generic.greenmist" href="~/lib/devextreme/css/dx.greenmist.min.css" data-active="false" />

    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />

    <!-- jquery -->
    <script src="~/lib/jquery/jquery.min.js"></script>

    <!-- FontAwesome -->
    <script defer src="~/lib/fontawesome/brands.min.js"></script>
    <script defer src="~/lib/fontawesome/regular.min.js"></script>
    <script defer src="~/lib/fontawesome/solid.min.js"></script>
    <script defer src="~/lib/fontawesome/fontawesome.min.js"></script>

    <!-- Moment library -->
    <script src="~/lib/moment.js/moment-with-locales.min.js"></script>

    <!-- DevExtreme library -->
    <script src="~/lib/devextreme-quill/dx-quill.js"></script>

    <script src="~/lib/devextreme/js/dx.all.min.js"></script>
    <script src="~/lib/devextreme/js/localization/dx.messages.en.min.js"></script>
    <script src="~/lib/devextreme/js/localization/dx.messages.it.min.js"></script>

    <!-- Chart.js library -->
    <script src="~/lib/Chart.js/chart.umd.min.js"></script>
    <script src="~/lib/Chart.js/chartjs-adapter-moment.min.js"></script>
    <script src="~/lib/Chart.js/plugin/chartjs-plugin-annotation.min.js"></script>
    <script src="~/lib/Chart.js/plugin/chartjs-plugin-datalabels.min.js"></script>
    @*<script src="~/lib/Chart.js/plugin/chartjs-plugin-streaming.min.js"></script>*@

    <!-- JS Libraries -->
    <script src="~/lib/exceljs/exceljs.min.js"></script>
    <script src="~/lib/FileSaver.js/FileSaver.min.js"></script>
    <script src="~/lib/html2pdf/html2pdf.bundle.min.js"></script>

</head>
<body>
    <app><component type="typeof(App)" param-InitialState="state" render-mode="ServerPrerendered" /></app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
        // Wait until a 'reload' button appears
        new MutationObserver((mutations, observer) => {
            if (document.querySelector('#components-reconnect-modal h5 a')) {
                // Now every 10 seconds, see if the server appears to be back, and if so, reload
                async function attemptReload() {
                    await fetch(''); // Check the server really is back
                    location.reload();
                }
                observer.disconnect();
                attemptReload();
                setInterval(attemptReload, 10000);
            }
        }).observe(document.body, { childList: true, subtree: true });
    </script>

    <!-- DevExtreme library -->
    <script>
        DevExpress.localization.locale("it-IT");
    </script>

    <!-- Chart.js library -->
    <script>
        Chart.defaults.font.family = "'Tahoma', 'Geneva', sans-serif";
        Chart.defaults.borderColor = 'rgba(153, 153, 153, 1)';
        Chart.defaults.color = 'rgba(153, 153, 153, 1)';

        Chart.register(ChartDataLabels);
    </script>
</body>
</html>
